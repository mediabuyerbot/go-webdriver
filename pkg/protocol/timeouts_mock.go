// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/protocol/timeouts.go

// Package protocol is a generated GoMock package.
package protocol

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockTimeouts is a mock of Timeouts interface
type MockTimeouts struct {
	ctrl     *gomock.Controller
	recorder *MockTimeoutsMockRecorder
}

// MockTimeoutsMockRecorder is the mock recorder for MockTimeouts
type MockTimeoutsMockRecorder struct {
	mock *MockTimeouts
}

// NewMockTimeouts creates a new mock instance
func NewMockTimeouts(ctrl *gomock.Controller) *MockTimeouts {
	mock := &MockTimeouts{ctrl: ctrl}
	mock.recorder = &MockTimeoutsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTimeouts) EXPECT() *MockTimeoutsMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockTimeouts) Get(arg0 context.Context) (Timeout, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(Timeout)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockTimeoutsMockRecorder) Get(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTimeouts)(nil).Get), arg0)
}

// SetImplicit mocks base method
func (m *MockTimeouts) SetImplicit(arg0 context.Context, arg1 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetImplicit", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetImplicit indicates an expected call of SetImplicit
func (mr *MockTimeoutsMockRecorder) SetImplicit(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetImplicit", reflect.TypeOf((*MockTimeouts)(nil).SetImplicit), arg0, arg1)
}

// SetPageLoad mocks base method
func (m *MockTimeouts) SetPageLoad(arg0 context.Context, arg1 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPageLoad", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPageLoad indicates an expected call of SetPageLoad
func (mr *MockTimeoutsMockRecorder) SetPageLoad(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPageLoad", reflect.TypeOf((*MockTimeouts)(nil).SetPageLoad), arg0, arg1)
}

// SetScript mocks base method
func (m *MockTimeouts) SetScript(arg0 context.Context, arg1 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetScript", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetScript indicates an expected call of SetScript
func (mr *MockTimeoutsMockRecorder) SetScript(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetScript", reflect.TypeOf((*MockTimeouts)(nil).SetScript), arg0, arg1)
}
